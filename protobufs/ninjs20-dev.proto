syntax = "proto2";

message Ninjs {
  message Description {
    optional string name = 1;
    optional string content = 2;
  }
  
  message Body {
    optional string name = 1;
    optional string value = 2;
  }
  
  message Headline {
    optional string name = 1;
    optional string text = 2;
  }
  
  message Person {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Organisation {
    message Symbols {
      optional string ticker = 1;
      optional string exchange = 2;
    }
    
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
    repeated Symbols symbols = 5;
  }
  
  message Place {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Subject {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Event {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Object {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Infosource {
    optional string name = 1;
    optional string rel = 2;
    optional string scheme = 3;
    optional string code = 4;
  }
  
  message Renditions {
    optional string name = 1;
    optional string href = 2;
    optional string mimetype = 3;
    optional string title = 4;
    optional int32 height = 5;
    optional int32 width = 6;
    optional int32 sizeinbytes = 7;
    optional int32 duration = 8;
    optional string format = 9;
  }
  
  message Associations {
  }
  
  message Trustindicator {
    optional string scheme = 1;
    optional string code = 2;
    optional string title = 3;
    optional string href = 4;
  }
  
  message Standard {
    optional string name = 1;
    optional string version = 2;
    optional string schema = 3;
  }
  
  message Genre {
    optional string name = 1;
    optional string scheme = 2;
    optional string code = 3;
  }
  
  message Rightsinfo {
    optional string langid = 1;
    optional string linkedrights = 2;
    optional string encodedrights = 3;
  }
  
  required string uri = 1;
  enum Type {
    text = 0;
    audio = 1;
    video = 2;
    picture = 3;
    graphic = 4;
    composite = 5;
    component = 6;
  }
  optional Type type = 2;
  optional string mimetype = 3;
  enum Representationtype {
    full = 0;
    partial = 1;
  }
  optional Representationtype representationtype = 4;
  optional string profile = 5;
  optional string version = 6;
  optional string firstcreated = 7;
  optional string versioncreated = 8;
  optional string embargoed = 9;
  enum Pubstatus {
    usable = 0;
    withheld = 1;
    canceled = 2;
  }
  optional Pubstatus pubstatus = 10;
  optional int32 urgency = 11;
  optional string copyrightholder = 12;
  optional string copyrightnotice = 13;
  optional string usageterms = 14;
  optional string ednote = 15;
  optional string language = 16;
  repeated Description description = 17;
  repeated Body body = 18;
  repeated Headline headline = 19;
  repeated Person person = 20;
  repeated Organisation organisation = 21;
  repeated Place place = 22;
  repeated Subject subject = 23;
  repeated Event event = 24;
  repeated Object object = 25;
  repeated Infosource infosource = 26;
  optional string title = 27;
  optional string byline = 28;
  optional string slugline = 29;
  optional string located = 30;
  optional int32 charcount = 31;
  optional int32 wordcount = 32;
  repeated Renditions renditions = 33;
  repeated Associations associations = 34;
  repeated Trustindicator trustindicator = 35;
  optional Standard standard = 36;
  repeated Genre genre = 37;
  optional Rightsinfo rightsinfo = 38;
}

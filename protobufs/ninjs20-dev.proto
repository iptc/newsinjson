syntax = "proto2";

message Ninjs {

  message Description {
    optional string name = 1;
    optional string value = 2;
  }
  
  message Body {
    optional string name = 1;
    optional string value = 2;
  }
  
  message Headline {
    optional string name = 1;
    optional string value = 2;
  }
  
  message Person {
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
  }
  
  message Organisation {
    message Symbols {
      optional string ticker = 1;
      optional string exchange = 2;
    }
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
    repeated Symbols symbols = 5;
  }

  message Value {
    oneof value_type {
        string string_value = 1;
        double double_value = 2;
        uint64 pos_int_value = 3;
        uint64 neg_int_value = 4;
        bool bool_value = 5;
        string json_value = 6;
    }
  }

  message Geometry {
    required Type type = 1;

    repeated uint32 lengths = 2 [packed = true]; // coordinate structure in lengths
    repeated sint64 coords = 3 [packed = true]; // delta-encoded integer values
    repeated Geometry geometries = 4;

    repeated Value values = 13;
    repeated uint32 custom_properties = 15 [packed = true];

    enum Type {
        POINT = 0;
        MULTIPOINT = 1;
        LINESTRING = 2;
        MULTILINESTRING = 3;
        POLYGON = 4;
        MULTIPOLYGON = 5;
        GEOMETRYCOLLECTION = 6;
    }
}
  message Place {
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
    optional Geometry geometry_geojson = 5;
  }
  
  message Subject {
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
  }
  
  message Event {
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
  }
  
  message Object {
    optional string name = 1;
    optional string rel = 2;
    optional string uri = 3;
    optional string literal = 4;
  }
  
  message Infosource {
    optional string name = 1;
    optional string role = 2;
    optional string uri = 3;
    optional string literal = 4;
  }
  
  message Rendition {
    optional string name = 1;
    optional string href = 2;
    optional string mimetype = 3;
    optional string title = 4;
    optional int32 height = 5;
    optional int32 width = 6;
    optional int32 sizeinbytes = 7;
    optional int32 duration = 8;
    optional string format = 9;
  }

  message Association {
    required string name = 1;
    optional Ninjs ninjs = 2;
  }

  message Altids {
    optional string name = 1;
    optional string value = 2;
  }
  
  message Trustindicator {
    optional string role = 1;
    optional string title = 2;
    optional string href = 3;
  }
  
  message Standard {
    optional string name = 1;
    optional string version = 2;
    optional string schema = 3;
  }
  
  message Genre {
    optional string name = 1;
    optional string uri = 2;
    optional string literal = 3;
  }
  
  message Rightsinfo {
    optional string langid = 1;
    oneof test_oneof {
      string linkedrights = 2;
      string encodedrights = 3;
    }    
  }

  enum Type {
    text = 0;
    audio = 1;
    video = 2;
    picture = 3;
    graphic = 4;
    composite = 5;
    component = 6;
  }
  enum Representationtype {
    full = 0;
    partial = 1;
  }
  enum Pubstatus {
    usable = 0;
    withheld = 1;
    canceled = 2;
  }


  required string uri = 1;
  optional Type type = 2;
  optional string mimetype = 3;
  optional Representationtype representationtype = 4;
  optional string version = 5;
  optional string firstcreated = 6;
  optional string versioncreated = 7;
  optional Pubstatus pubstatus = 8;
  optional int32 urgency = 9;
  optional string language = 10;
  repeated Body body = 11;
  repeated Description description = 12;
  repeated Headline headline = 13;
  optional string title = 14;
  optional string slugline = 15;

  repeated Person person = 20;
  repeated Organisation organisation = 21;
  repeated Place place = 22;
  repeated Subject subject = 23;
  repeated Event event = 24;
  repeated Object object = 25;
  repeated Infosource infosource = 26;
  repeated Rendition renditions = 27;
  repeated Association associations = 28;
  repeated Altids altids = 29;
  repeated Trustindicator trustindicator = 30;
  repeated Genre genre = 31;

  optional string byline = 50;
  optional string located = 51;
  optional int32 charcount = 52;
  optional int32 wordcount = 53;
  optional Standard standard = 54;
  optional Rightsinfo rightsinfo = 55;

  optional string embargoed = 110;
  optional string profile = 112;
  optional string copyrightholder = 113;
  optional string copyrightnotice = 114;
  optional string usageterms = 115;
  optional string ednote = 116;
  optional string contentcreated = 120;

}
